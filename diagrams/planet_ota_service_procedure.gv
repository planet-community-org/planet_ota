digraph PlanetOtaUpdateEventLoop {
    label = "\nPlanet OTA Service: Event Loop.";
    node [shape=box, style=rounded];

    vendor_push [label = "Vendor pushes asset to OTA service"];
    ota_check_before_process [label = "OTA service checks asset checksums and checks for duplicates."];
    ota_process [label = "OTA service uploads asset to S3, and adds to DB"];
    ota_notify [label = "OTA service pushes notification to subscribed devices over STOMP via WebSockets."]
    ota_service [label = "OTA service"];

    vendor_push->ota_check_before_process->ota_process->ota_service;
    ota_service->ota_notify;

    device_enter [label = "PC device subscribes to STOMP queue"];
    device_wait [label = "Device waiting for notification"]
    device_in_loop [label = "Device now in wait loop."];
    device_receive_notify [label = "PC device receives notification"];
    device_wait_backoff [label = "PC device waits 15-45 minutes, backoff"];
    device_sends_meta [label = "PC device sends unique hashed ID to OTA service, and checks `lastUpdated` key"];
    device_process_listing [label = "Device processes `lastUpdated` key, and quits if no update"]
    
    device_enter->device_wait->ota_service->device_in_loop->ota_notify;
    ota_notify->device_receive_notify;
    device_receive_notify->device_wait_backoff->device_sends_meta->device_process_listing;
    
    device_notifies_user [label = "Device notifies user of new update"];
    device_dl_from_s3 [label = "Device downloads asset from S3"];
    device_checks_checksum [label = "Device checks asset manifest and checksum"];
    device_prompts_for_install [label = "Device prompts for update install"];
    device_install_update [label = "Device installs update"];
    device_reboot [label = "Device reboots."]

    device_process_listing->device_notifies_user;
    device_notifies_user->device_dl_from_s3->device_checks_checksum;
    device_checks_checksum->device_prompts_for_install->device_install_update->device_reboot;
}


